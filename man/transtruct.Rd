% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transtruct.R
\name{transtruct}
\alias{transtruct}
\title{Transcript Stucture}
\usage{
transtruct(
  ep.event = NULL,
  ip.event = NULL,
  Gcount = Gcount,
  RMM,
  iMM = NULL,
  designM,
  annotation,
  Groups,
  keep.intron = FALSE
)
}
\arguments{
\item{ep.event}{list/vector of Cassette Exon event(s), for which Transcript Structure is required. (default = NULL)}

\item{ip.event}{list/vector of Intron Retention event(s), for which Transcript Structure is required. (default = NULL)}

\item{Gcount}{Gcount matrix of given geneID. Gcount matrix generated via \code{\link{countMatrixGenes}}/\code{\link{ppAuto}}/\code{\link{ppFASE}} as Gcount.Rdata. It contains gene-wise read count summarization of meta-features times samples in the study.}

\item{RMM}{RMM of given geneID. readMembershipMatrix contains association of each exon with meta-features (exons, introns, skipping junctions and flanking junctions) of that gene. It is generated by \code{\link{readMembershipMatrix}} function as RMM.Rdata. It is required for both Cassette Exon as well as Intron Retention event.}

\item{iMM}{iMM of given geneID. intronMembershipMatrix contains association of each intron with meta-features (introns, exons and skipping junctions) of that gene. It is generated by \code{\link{intronMembershipMatrix}} function as iMM.Rdata. It is required only when Transcript Structure for Intron Retention event is required.}

\item{designM}{design matrix required by edgeR. \cr
Example: If there are four samples, two corresponding each to control and treated condition, design matrix should be prepared as: \cr
designM <-  matrix(c(rep(1,2), rep(0,4), rep(1,2)), byrow = T, ncol=2, dimnames=list(c('Sample1', 'Sample2', 'Sample3', 'Sample4'), c('Normal', 'Treated')))}

\item{annotation}{annotation matrix of given geneID. annotation is generated by \code{\link{readMembershipMatrix}}/\code{\link{ppFASE}} function as Annotation.Rdata. It contains gene-wise annotation of each meta-feature (exons, introns and junctions).}

\item{keep.intron}{if a cassette exon event is selected by ExonPointer due to flanking introns, instead of or along with flanking junction(s), retain intron in the transcript structure and propagate structure using that intron. logical. (default = FALSE)}

\item{geneID}{geneID of the Cassette Exon and/or Intron Retention event(s). Only one geneID can be passed.}
}
\value{
list of three matrices: \cr
       \enumerate{
       \item numeric: transtruct.condition: It contains transcript structure(s) of given gene for corresponding Cassette Exon and/or Intron Retention event(s) (as specified by rownames), in the treated samples.
       \item numeric: transtruct.normal: It contains transcript structure(s) of given gene for corresponding Cassette Exon and/or Intron Retention event(s) (as specified by rownames), in the normal/untreated samples.
       \item numeric: expression: it contains expression values of meta-features in the given gene
       }
}
\description{
transtruct uses alternative splicing information to find structures of transcripts generated in two conditions (usually control and treated). It can generate stuctures corresponding to multiple AS events in a gene at a time. These can be passed as a list or vector to ep.event or ip.event parameter. transtruct primarily requires RMM and iMM of the gene to find seed exons and extend them to form continuous paths of exons connected via flanking junctions.
}
